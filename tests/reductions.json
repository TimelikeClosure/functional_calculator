{
    "empty": {
        "input": [],
        "expected": "0"
    },
    "operands": {
        "integers": {
            "non_negative": {
                "single_digit_non_zero": {
                    "input": "1",
                    "expected": "1"
                },
                "multi_digit_non_zero": {
                    "input": "123",
                    "expected": "123"
                },
                "zero": {
                    "input": "0",
                    "expected": "0"
                },
                "leading_zero": {
                    "input": "0023",
                    "expected": "23"
                },
                "trailing_zero": {
                    "input": "1230",
                    "expected": "1230"
                },
                "all_zero": {
                    "input": "0000",
                    "expected": "0"
                }
            }
        },
        "floats": {
            "decimal": {
                "input": ".",
                "expected": "0."
            },
            "decimal_number": {
                "input": "12.34",
                "expected": "12.34"
            },
            "trailing_decimal": {
                "input": "12.+34.",
                "expected": ["12", "+", "34."]
            },
            "trailing_zero": {
                "input": "12.300+45.600",
                "expected": ["12.3", "+", "45.600"]
            },
            "leading_zero_float": {
                "input": "0.123",
                "expected": "0.123"
            },
            "leading_point_float": {
                "input": ".123",
                "expected": "0.123"
            },
            "consecutive_decimals": {
                "input": "1...23",
                "expected": "1.23"
            },
            "non_consecutive_decimals": {
                "input": "1.2.3",
                "expected": "1.23"
            }
        }
    },
    "operators": {
        "binary": {
            "single": {
                "input": "1+2",
                "expected": ["1", "+", "2"]
            },
            "repeated": {
                "input": "1+++2",
                "expected": ["1", "+", "2"]
            },
            "changing": {
                "input": "1+-*2",
                "expected": ["1", "*", "2"]
            },
            "no_first_operand": {
                "input": "+2",
                "expected": ["0", "+", "2"]
            },
            "no_second_operand": {
                "input": "1+",
                "expected": ["1", "+"]
            },
            "no_operands": {
                "input": "+",
                "expected": ["0", "+"]
            },
            "trailing_decimal_first_operand": {
                "input": "1.+2",
                "expected": ["1", "+", "2"]
            }
        }
    },
    "grouping": {
        "single_open": {
            "input": "1+(2",
            "expected": ["1", "+", "(", "2"]
        },
        "single_set": {
            "input": "1+(2-3)",
            "expected": ["1", "+", "(", "2", "-", "3", ")"]
        },
        "multiple_sets": {
            "input": "(1+2)-(3*4)",
            "expected": ["(", "1", "+", "2", ")", "-", "(", "3", "*", "4", ")"]
        },
        "nested_sets": {
            "input": "1+(2-(3*4))",
            "expected": ["1", "+", "(", "2", "-", "(", "3", "*", "4", ")", ")"]
        },
        "balancing": {
            "single_closing": {
                "input": "1+2)*3",
                "expected": ["(", "1", "+", "2", ")", "*", "3"]
            },
            "multiple_closing": {
                "input": "1+2)*3)-4",
                "expected": ["(", "(", "1", "+", "2", ")", "*", "3", ")", "-", "4"]
            },
            "equality_extra_closings": {
                "input": "1+2)-3=4/5)+6",
                "expected": ["(", "1", "+", "2", ")", "-", "3", "=", "(", "4", "/", "5", ")", "+", "6"]
            },
            "nested_equality": {
                "input": "1+(2-3=4/5)+6",
                "expected": ["1", "+", "(", "2", "-", "3", ")", "=", "(", "4", "/", "5", ")", "+", "6"]
            }
        },
        "implied_ops":{
            "operand_operator": {
                "input": "2(1+3)4",
                "expected": ["2", "*", "(", "1", "+", "3", ")", "*", "4"]
            },
            "set_operator": {
                "input": "(1+2)(3+4)",
                "expected": ["(", "1", "+", "2", ")", "*", "(", "3", "+", "4", ")"]
            },
            "empty_group": {
                "input": "1+()-3",
                "expected": ["1", "+", "(", "0", ")", "-", "3"]
            },
            "missing_group_operands": {
                "input": "1+(-)*3",
                "expected": ["1", "+", "(", "0", "-", "0", ")", "*", "3"]
            }
        }
    }
}